I"Ç<p>Descripci√≥n de la problem√°tica de gesti√≥n de procesos batch y streaming. La diferencia entre un proceso batch y un proceso de streaming es que los procesos batch reciben una cantidad finita de datos, mientras que los procesos de streaming reciben datos de manera indefinida. Los procesos batch, llamados Task en el dashboard de SCDF, son tareas que duran poco tiempo (pueden ser minutos o horas). Reciben una cantidad definida de datos, los procesan y acaban.</p>

<p>Spring Cloud Data Flow (SCDF) es una aplicaci√≥n para adminitrar de manera visual los procesos batch y streaming y ofrece las siguientes funcionalidades:</p>
<ul>
  <li>Monitorizaci√≥n</li>
  <li>Arranque y parada de procesos</li>
  <li>Definici√≥n de flujos de datos avanzados compuestos de m√∫ltiples procesos. (workflos de job)</li>
  <li>API Rest</li>
</ul>

<p>Aparte</p>

<p>Spring Cloud Data Flow (SCDF) es un sistema de procesamiento de datos basado en microservicios pensado para sistemas cloud como Cloud Foundry y Kubernetes (aunque tambi√©n es posible hacer una instalaci√≥n en local mediante docker compose).</p>

<p>Aunque aparentemente SCDF parezca ser una aplicaci√≥n web sencilla, en realidad se basa en una infraestructura relativamente compleja compuesta por m√∫ltiples componentes. Es importante conocer el prop√≥sito de cada componente:</p>

<h2 id="spring-cloud-data-flow-server">Spring Cloud Data Flow Server</h2>

<p>Es la parte m√°s visual de SCDF ya que se trata del frontend web que utilizamos para administrar y monitorizar los procesos batch y de streaming.</p>

<p>Generalmente estos procesos se desarrollan sobre el framework <a href="https://spring.io/projects/spring-batch">Spring Batch</a> para luego ser encapsulados en fat jars de Spring Boot. Para desplegar las aplicaciones Spring Boot en SCDF, es necesario  previamente publicar los binarios en un repositorio de Maven al que tenga acceso SCDF. Una vez publicados en el repositorio de Maven, s√≥lo hace falta indicar la informaci√≥n del artefacto en SCDF.</p>

<p><img src="/assets/images/2019-09-03-spring-cloud-data-flow/create-stream.png" alt="dar-de-alta-artefacto-maven" /></p>

<p>Tambi√©n existe la posibilidad de que desplegar contenedores de Docker en SCDF.</p>

<iframe width="420" height="315" src="http://www.youtube.com/embed/MgQyI-oDWD8" frameborder="0" allowfullscreen=""></iframe>

<p>La informaci√≥n de todas las ejecuciones se quedan guardadaMantiene un historial detallado de todas las ejecuciones de tareas o jobs.</p>

<h2 id="spring-cloud-skipper-server">Spring Cloud Skipper Server</h2>
<p>Skipper es una herramienta para gestionar el despliegue de aplicaciones Spring Boot a diferentes plataformas cloud.</p>

<p>SCDF delega en skipper toda la parte de streaming del servidor, este se encarga de gestionar el ciclo de vida de los streams, del despliegue de los mismos, actualizaciones o rollbacks.</p>

<h2 id="base-de-datos">Base de datos</h2>
<p>SCDF necesita configurada una base de datos relacional para guardar el historial de las aplicaciones desplegadas, sus ejecuciones y logs.</p>

<p>Por defecto, SCDF trae los drivers para funcionar utilizando MySQL, Postgres, H2, Oracle, DB2 y SqlServer.</p>

<h2 id="sistema-de-colas-de-mensajes">Sistema de colas de mensajes</h2>
<p>Para que las aplicaciones desplegadas en el sistema puedan comunicarse entre s√≠, es necesario la instalaci√≥n de un sistema de encolado de mensajes.</p>

<p>SCDF viene preconfigurado para poder utilizar RabbitMQ o Kafka. Podemos instalar cualquiera de las dos opciones.</p>

<h2 id="prometheus-y-grafana">Prometheus y Grafana</h2>
<p>Para la monitorizaci√≥n del sistema se utilizan Prometheus, encargado de sacar las diferentes m√©tricas, y Grafana para generar diferentes dashboards para consultar estos datos.</p>

<p>El dashboard nos ofrece una interfaz gr√°fica para la gesti√≥n de todo el sistema pero SCDF tambi√©n ofrece un API REST para crear, desplegar y ejecutar streams o tareas batch.</p>
:ET