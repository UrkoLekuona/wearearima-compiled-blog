I" <p>Generalmente cuando se quiere empaquetar una aplicaci√≥n Java en un contenedor Docker, se crea un 
fichero Dockerfile en el proyecto para especificar las propiedades de la imagen Docker, tales como: 
en qu√© imagen se basa, cu√°l es el ejecutable, qu√© puerto se expone, etc.</p>

<p>Una alternativa al fichero Dockerfile es definir esa informaci√≥n en el pom.xml mediante el plugin de 
<a href="https://github.com/GoogleContainerTools/jib">Jib</a>. Las ventajas que nos aporta esta librer√≠a son:</p>

<ul>
  <li>No requiere tener Docker instalado para crear im√°genes Docker.</li>
  <li>Separa el c√≥digo del proyecto y sus dependencias en diferentes capas. Dado que la capa de dependencias no
 var√≠a frecuentemente, podemos reutilizarla y s√≥lo hacer el building de la capa de nuestro c√≥digo.</li>
</ul>

<p>https://github.com/GoogleContainerTools/jib/blob/master/docs/faq.md#why-is-my-image-created-48-years-ago</p>

<p>https://reproducible-builds.org/</p>

<p>https://github.com/GoogleContainerTools/jib/issues/606</p>

<p>https://cloud.google.com/blog/products/gcp/introducing-jib-build-java-docker-images-better</p>

<p>https://blog.jdriven.com/2018/09/spicy-spring-dockerize-spring-boot-application-with-jib/</p>
:ET